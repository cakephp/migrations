language: php

php:
  - 7.2
  - 7.4

services:
  - mysql
  - postgresql

env:
  matrix:
    - DB=mysql db_dsn='mysql://root@127.0.0.1/cakephp_test?encoding=utf8mb4' db_dsn_compare='mysql://root@127.0.0.1/cakephp_comparisons'
    - DB=sqlite
  global:
    - DEFAULT=1

matrix:
  allow_failures:
    - env: DB=pgsql db_dsn='postgres://postgres@127.0.0.1/cakephp_test' db_dsn_compare='postgres://postgres@127.0.0.1/cakephp_comparisons'

  fast_finish: true

  include:
    - php: 7.2
      dist: trusty
      sudo: required
      env: DB=mysql db_dsn='mysql://root@127.0.0.1/cakephp_test?encoding=utf8mb4' DBV=56 db_dsn_compare='mysql://root@127.0.0.1/cakephp_comparisons'
      addons:
        apt:
          packages:
          - mysql-server-5.6
          - mysql-client-core-5.6
          - mysql-client-5.6

    - php: 7.3
      dist: trusty
      sudo: required
      env: CODECOVERAGE=1 DEFAULT=0 DB=mysql db_dsn='mysql://root@127.0.0.1/cakephp_test?encoding=utf8mb4' DBV=56 db_dsn_compare='mysql://root@127.0.0.1/cakephp_comparisons'
      addons:
        apt:
          packages:
          - mysql-server-5.6
          - mysql-client-core-5.6
          - mysql-client-5.6

    - php: 7.2
      env: DB=pgsql db_dsn='postgres://postgres@127.0.0.1/cakephp_test' db_dsn_compare='postgres://postgres@127.0.0.1/cakephp_comparisons'

    - php: 7.2
      env: PREFER_LOWEST=1

    - php: 7.3
      env: CHECKS=1 DEFAULT=0

before_script:
  - if [[ $PREFER_LOWEST != 1 ]]; then composer install --no-interaction; fi
  - if [[ $PREFER_LOWEST == 1 ]]; then composer update --no-interaction --prefer-lowest; fi

  - if [[ $CHECKS == 1 ]]; then composer stan-setup; fi

  - if [[ $DB == 'mysql' ]]; then mysql -u root -e 'CREATE DATABASE cakephp_test DEFAULT COLLATE=utf8mb4_general_ci; CREATE DATABASE cakephp_comparisons;'; fi

  - if [[ $DB == 'pgsql' ]]; then psql -c 'CREATE DATABASE cakephp_test;' -U postgres; fi
  - if [[ $DB == 'pgsql' ]]; then psql -c 'CREATE DATABASE cakephp_comparisons;' -U postgres; fi

script:
  - if [[ $DEFAULT == 1 ]]; then vendor/bin/phpunit; fi

  - if [[ $CODECOVERAGE == 1 ]]; then vendor/bin/phpunit --coverage-clover=clover.xml; fi

  - if [[ $CHECKS == 1 ]]; then composer stan; fi
  - if [[ $CHECKS == 1 ]]; then composer cs-check; fi

after_success:
  - if [[ $CODECOVERAGE == 1 ]]; then bash <(curl -s https://codecov.io/bash); fi

notifications:
  email: false

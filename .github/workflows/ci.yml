name: CI

on:
  push:
    branches:
      - 3.x
      - 4.x
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  testsuite-linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2']
        db-type: [mysql, pgsql, sqlite]
        prefer-lowest: ['']
        cake_version: ['']
        include:
          - php-version: '8.1'
            db-type: 'sqlite'
            prefer-lowest: 'prefer-lowest'
          - php-version: '8.1'
            db-type: 'sqlite'
            cake_version: ^5.1.0-RC1

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pg-password
          PGPASSWORD: pg-password
          POSTGRES_DB: cakephp_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup MySQL
        if: matrix.db-type == 'mysql'
        run: |
          sudo service mysql start
          mysql -h 127.0.0.1 -u root -proot -e 'CREATE DATABASE cakephp_test CHARACTER SET = utf8mb4 DEFAULT COLLATE=utf8mb4_general_ci;'
          mysql -h 127.0.0.1 -u root -proot -e 'CREATE DATABASE cakephp_comparisons;'
          mysql -h 127.0.0.1 -u root -proot -e 'CREATE DATABASE cakephp_snapshot;'

      - name: Setup Postgres
        if: matrix.db-type == 'pgsql'
        env:
          PGUSER: postgres
          PGPASSWORD: pg-password
        run: |
          psql -h 127.0.0.1 -c 'CREATE DATABASE "cakephp_snapshot";'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, pdo_${{ matrix.db-type }}
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Get date part for cache key
        id: key-date
        run: echo "date=$(date +'%Y-%m')" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

      - name: Composer install
        run: |
          if [[ ${{ matrix.php-version }} == '8.2' ]]; then
            composer install --ignore-platform-req=php
          elif ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
            composer update --prefer-lowest --prefer-stable
          elif ${{ matrix.cake_version != '' }}; then
            composer require --dev cakephp/cakephp:${{ matrix.cake_version }}
            composer update
          else
            composer update
          fi

      - name: Run PHPUnit
        run: |
          if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then
            export DB='sqlite'
          fi
          if [[ ${{ matrix.db-type }} == 'mysql' ]]; then
            export DB='mysql'
            export DB_URL='mysql://root:root@127.0.0.1/cakephp_test'
            export DB_URL_COMPARE='mysql://root:root@127.0.0.1/cakephp_comparisons'
            export DB_URL_SNAPSHOT='mysql://root:root@127.0.0.1/cakephp_snapshot'
          fi
          if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then
            export DB='pgsql'
            export DB_URL='postgres://postgres:pg-password@127.0.0.1/cakephp_test'
            export DB_URL_SNAPSHOT='postgres://postgres:pg-password@127.0.0.1/cakephp_snapshot'
          fi
          if [[ ${{ matrix.php-version }} == '8.1' && ${{ matrix.db-type }} == 'mysql' ]]; then
            vendor/bin/phpunit --coverage-clover=coverage.xml
          else
            vendor/bin/phpunit
          fi

      - name: Code Coverage Report
        if: success() && matrix.php-version == '8.1' && matrix.db-type == 'mysql'
        uses: codecov/codecov-action@v4

  testsuite-windows:
    runs-on: windows-2022
    name: Windows - PHP 8.1 & SQL Server

    env:
      EXTENSIONS: mbstring, intl, pdo_sqlsrv
      PHP_VERSION: '8.1'

    steps:
    - uses: actions/checkout@v4

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Setup PHP extensions cache
      id: php-ext-cache
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: ${{ env.EXTENSIONS }}
        key: ${{ steps.key-date.outputs.date }}

    - name: Cache PHP extensions
      uses: actions/cache@v4
      with:
        path: ${{ steps.php-ext-cache.outputs.dir }}
        key: ${{ runner.os }}-php-ext-${{ steps.php-ext-cache.outputs.key }}
        restore-keys: ${{ runner.os }}-php-ext-${{ steps.php-ext-cache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: ${{ env.EXTENSIONS }}
        ini-values: apc.enable_cli=1, extension=php_fileinfo.dll, zend.assertions=1, error_reporting=-1, display_errors=On
        coverage: pcov

    - name: Setup SQLServer
      run: |
        # MSSQLLocalDB is the default SQL LocalDB instance
        SqlLocalDB start MSSQLLocalDB
        SqlLocalDB info MSSQLLocalDB
        sqlcmd -S "(localdb)\MSSQLLocalDB" -Q "create database cakephp_test;"
        sqlcmd -S "(localdb)\MSSQLLocalDB" -Q "create database cakephp_snapshot;"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

    - name: Composer install
      run: composer update

    - name: Run PHPUnit
      env:
        DB_URL: 'sqlserver://(localdb)\MSSQLLocalDB/cakephp_test'
        DB_URL_SNAPSHOT: 'sqlserver://(localdb)\MSSQLLocalDB/cakephp_snapshot'
        CODECOVERAGE: 1
      run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Submit code coverage
      uses: codecov/codecov-action@v4

  cs-stan:
    uses: cakephp/.github/.github/workflows/cs-stan.yml@5.x
    secrets: inherit
